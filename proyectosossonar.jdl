
application {
     config {
        baseName proyectoSOS
        applicationType monolith
        packageName co.edu.sena
        authenticationType jwt
        devDatabaseType mysql
        prodDatabaseType mysql
        cacheProvider no
        buildTool maven
        clientFramework angularX
        enableTranslation true
        nativeLanguage es
        languages [en, es]
        //websocket spring-websocket
        //testFrameworks [cucumber]
        //entitySuffix false
        jhiPrefix ceet
        reactive false
        serverPort 8080
        searchEngine false
        clientTheme quartz

       //clientThemeVariant
    }
  
  entities *
  }
  enum StateAchievement{
  Active (fortaleza),
  Inactive (debilidad)
  
  }


  entity Student {
  attendantName String required maxlength ( 30) ,
  kin String required maxlength (20)
  }
  
  entity Enrollment {
  registrationNumber String required maxlength (50),
  startDate ZonedDateTime 
  }
  entity Level {
  nameCurse String required maxlength (10),
  courseAcronym String required maxlength (10)
  }
  entity Area {
  areaName String required maxlength (30)
  }
  entity Course {
  nameCourse String required maxlength (30)
  }
  entity Achievement {
  achievementDescription String required maxlength (500),
  statusAchievement StateAchievement
  }
  entity Note {
  qualification String required maxlength (10),
  period String required maxlength (10)
  startDate ZonedDateTime 
  }
  entity User{
  name String required maxlength (10)
  lastName String required maxlength (10)
  phone String required maxlength (10)
  address String required maxlength (80)
  documentNumber String required maxlength (20)
  documentType String required maxlength (10)
  }

  entity Teacher {
  name String required maxlength (10)
  lastName String required maxlength (10)
  phone String required maxlength (10)
  address String required maxlength (80)
  documentNumber String required maxlength (20)
  documentType String required maxlength (10)
  
  }
  relationship ManyToMany {
  Achievement to Course 
  }
  relationship ManyToMany {
  Course to Area
  }
   relationship ManyToMany{
   Area to Level
   }
    relationship ManyToMany{
    Level to Enrollment
   }
    relationship OneToOne {
    Student to Enrollment
   }
     relationship ManyToMany{
     Note to Course
   }
   relationship OneToOne{
     Student to User 
   }
   
    relationship OneToOne{
    Teacher to User 
    }
    

    
    dto * with mapstruct
service * with serviceImpl
paginate * with pagination
//search * with elasticsearch
   
   
    
  
  
  
  



    